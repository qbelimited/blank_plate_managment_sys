name: Laravel CI

on:
  push:
    branches: [ "main" ]
  schedule:
      - cron: '0 0 * * *'
#   pull_request:
#     branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ${{ matrix.os }}

    strategy:
            matrix:
                php: [8.1]
                laravel: [9.19]
                dependency-version: [prefer-stable]
                os: [ubuntu-latest]
                include:
                    - laravel: 9.19
                      testbench: 7.7
                exclude:
                    - laravel: 7.*
                      php: 7.4

    name: PHP v-${{ matrix.php }}, Laravel v-${{ matrix.laravel }}, d-${{ matrix.dependency-version }}, os-${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - name: Install dependencies
        run: |
          composer update --ignore-platform-reqs --with-all-dependencies

      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

      - name: Check the duplicate code in app directory
        run: ./vendor/bin/phpcpd app/ --min-lines=5 --min-tokens=10

      # - name: Perform phpmd script
      #   run: ./vendor/bin/phpmd app/ github phpmdrules.xml

      # - name: Send email notification
      #   uses: wadeww/send-email-action@master
      #   with:
      #     server_address: smtp.gmail.com
      #     port: 465
      #     username: ${{secrets.MAIL_USERNAME}}
      #     password: ${{secrets.MAIL_PASSWORD}}
      #     subject: Workflow finished
      #     body: Job completed ${{job.status}}
      #     to: john@denver.com, elton@john.com
      #     from: Me

      # - name: Send Slack notification
      #   uses: 8398a7/action-slack@v2
      #   if: failure()
      #   with:
      #       status: ${{ job.status }}
      #       author_name: ${{ github.actor }}
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
