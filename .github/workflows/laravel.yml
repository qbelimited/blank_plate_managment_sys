name: Laravel CI

on:
  push:
    branches: [ "main" ]
  schedule:
      - cron: '0 0 * * *'
#   pull_request:
#     branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ${{ matrix.os }}

    strategy:
            matrix:
                php: [8.1, 7.9, 7.8]
                laravel: [9.*]
                dependency-version: [prefer-lowest, prefer-stable]
                os: [ubuntu-latest, windows-latest]
                include:
                    - laravel: 9.*
                      testbench: 4.*
                    - laravel: 9.*
                      testbench: 5.*
                    - laravel: 9.*
                      testbench: 3.*
                exclude:
                    - laravel: 7.8.*
                      php: 7.4
                    - laravel: 7.4.*
                      php: 7.4

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate

      # - name: Directory Permissions
      #   run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

      - name: Check the duplicate code in app directory
        run: ./vendor/bin/phpcpd app/ --min-lines=5 --min-tokens=10

      - name: Perform phpmd script
        run: ./vendor/bin/phpmd app/ github phpmdrules.xml
